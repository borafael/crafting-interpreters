1) Pick an open source implementation of a language you like. Download the source code and poke around in it. Try to find the code that implements the scanner and parser. Are they handwritten, or generated using tools like Lex and Yacc? (.l or .y files usually imply the latter.)

Lua! Both Parser and Scanner are handwritten (lparser.c and llex.c files in the source code)

2) Just-in-time compilation tends to be the fastest way to implement dynamically typed languages, but not all of them use it. What reasons are there to not JIT?

JIT has overhead as its necessary to not only identify potential "hot spots" but also to then compile to native code in realtime, it also makes the final code more difficult to debug as it may end up being dynamically chosen at runtime. Also JIT is memory intensive, so it may not be the best choice for some embedded systems where the memory is scarce.

3) Most Lisp implementations that compile to C also contain an interpreter that lets them execute Lisp code on the fly as well. Why?

???
